[X] On each step
    [X] Calculate ARP index for pads under cursor
    [X] Calculate currently active notes from input
    [X] Calculate resulting note
    [X] Send note
[X] Note duration
    [X] Make it work with hardcoded values
    [X] Gate control
[-] Vertical step
    [-] Quick arpeggio mode
        [ ] Calculate the time between notes so that they take exactly the same time
    [-] Simultaneous
        [X] Refactor so that the code that processes pads and the code that sends messages is separate
        [X] Make it work based on a variable
        [ ] Assign toggle to variable
    [ ] Enhancement
        [ ] Make it so we don't use sleeps but schedule events for other ticks
[X] Octave shift
[X] Encoders
    [X] Detect encoder messages
    [X] Encoder 4 sends encoder 5's control message, WTF?
        [X] Reset to factory defaults
    [X] Tie single encoder to octave control
    [X] Initialize encoder to correct value
    [X] Generalize ability to tie encoders to variables
        [X] Create data structure
        [X] Connect initialisation
        [X] Connect control message update
    [X] Make it easy to attach encoders to params
[X] Implement variable rate
    [X] Make it work with fixed values
    [X] Tie it to encoder
    [ ] Make it so instead of integer values, it snaps to a list of values
    [ ] Adjust range
[X] Sync playhead with MIDI clock
    [X] Playing in Reaper moves cursor
    [X] Moving cursor in Reaper moves cursor
    [X] Playing in Reaper causes output from seq (when there are programmed notes)
    [X] Bug: First note doesn't play
        -> Compensating latency in reaper seems like the best option
[X] Make arpeggiator multi octave
[ ] Re-enable mute
[ ] Remove ability to move cursor from launchpad
    [ ] Adjust step indexes
[ ] Option to play a column's notes in quick arpeggiated succession vs a the same time
[ ] Document latency necessary for first notes to be grabbed
[ ] Refactor to make state independent of UI
    [ ] Make UI a function of state and not viceversa
    [ ] This gives me more memory host more things than the UI can hold
[ ] Change channels with arrow keys
    [ ] Each channel holds its own running sequencer
    [ ] Next / prev arrows
    [ ] Pressing both arrows allows for bird's eye channel control
        [ ] Select channel
        [ ] Mute channel
[ ] Twister is context sensitive
    [ ] Only relevant to selected channel
    [ ] Controls
        [ ] Gate
        [X] Rate
        [ ] Straight / triplet
        [X] +- octave
        [ ] Scale
[ ] Receive harmony and drumkit on different channels
[ ] Copy / paste channel state
[ ] Advanced Sensitivity
    [ ] Do this if the launchpad allows to control light intensity (probabably does)
    [ ] Detect velocity on pad press, record it as part of the stored value
    [ ] When displaying, use the recorded velocity as intensity
[ ] Save / load state to / from file
